{"ast":null,"code":"var _jsxFileName = \"/Users/chiranjeevthomas/Documents/GitHub/fullstackopen2020/part9/patientor/src/components/PatientForm/index.tsx\",\n  _s = $RefreshSig$();\nimport { Button } from '@mui/material';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport patients from '../../services/patients';\nimport { FormTypes, HealthCheckRating } from '../../types';\nimport Common from './Common';\nimport HealthCheck from './HealthCheck';\nimport Hospital from './Hospital';\nimport OccupationalHealthcare from './OccupationalHealthcare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientForm = _ref => {\n  _s();\n  let {\n    patient,\n    setPatient\n  } = _ref;\n  const {\n    id\n  } = useParams();\n\n  //common\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState('');\n  const [specialist, setSpecialist] = useState('');\n  const [diagnosisCodes, setDiagnosisCodes] = useState([]);\n\n  //healthcheckEntry\n  const [type, setType] = useState('HealthCheck');\n  const [healthCheckRating, setHealthCheckRating] = useState(HealthCheckRating.CriticalRisk);\n  const [employerName, setEmployerName] = useState('');\n  const [sickLeave, setSickLeave] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [discharge, setDischarge] = useState({\n    date: '',\n    criteria: ''\n  });\n  const setDischargeDate = date => {\n    setDischarge({\n      ...discharge,\n      date\n    });\n  };\n  const setCriteria = criteria => {\n    setDischarge({\n      ...discharge,\n      criteria\n    });\n  };\n  const handleChange = event => {\n    setType(event.target.value);\n  };\n  const submitEntry = async event => {\n    event.preventDefault();\n    const result = {\n      date,\n      description,\n      discharge,\n      employerName,\n      healthCheckRating,\n      specialist,\n      type,\n      diagnosisCodes,\n      sickLeave\n    };\n    console.log(\"result\", JSON.stringify(result, null, 2));\n    try {\n      const entry = await patients.createPatientEntry(id, result);\n      console.log(\"Data received is\", JSON.stringify(entry, null, 2));\n      setPatient(patient => {\n        return {\n          ...patient,\n          entries: patient === null || patient === void 0 ? void 0 : patient.entries.concat(entry)\n        };\n      });\n    } catch (err) {\n      let errMsg = \"Error : \";\n      if (err instanceof Error) errMsg += err.message;\n      console.error(errMsg);\n    }\n  };\n  console.log(\"The type is \", type);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"2px dashed black\",\n      marginTop: \"1rem\",\n      marginBottom: \"1rem\",\n      padding: \"2rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitEntry,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Type : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        value: type,\n        label: \"Age\",\n        onChange: handleChange,\n        children: Object.values(FormTypes).map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: type,\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 26\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Common, {\n        description: description,\n        setDescription: setDescription,\n        date: date,\n        setDate: setDate,\n        specialist: specialist,\n        setSpecialist: setSpecialist,\n        selectedCodes: diagnosisCodes,\n        setSelectedCodes: setDiagnosisCodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), type === \"HealthCheck\" ? /*#__PURE__*/_jsxDEV(HealthCheck, {\n        health: healthCheckRating,\n        setHealth: setHealthCheckRating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 31\n      }, this) : \"\", type === \"OccupationalHealthcare\" ? /*#__PURE__*/_jsxDEV(OccupationalHealthcare, {\n        employerName: employerName,\n        setEmployerName: setEmployerName,\n        sickLeave: sickLeave,\n        setSickLeave: setSickLeave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this) : \"\", type === \"Hospital\" ? /*#__PURE__*/_jsxDEV(Hospital, {\n        discharge: discharge,\n        setDate: setDischargeDate,\n        setCriteria: setCriteria\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 28\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientForm, \"dDg5V0B+Se7T3p0/CIw1SEJEQpo=\", false, function () {\n  return [useParams];\n});\n_c = PatientForm;\nexport default PatientForm;\nvar _c;\n$RefreshReg$(_c, \"PatientForm\");","map":{"version":3,"names":["Button","MenuItem","Select","useState","useParams","patients","FormTypes","HealthCheckRating","Common","HealthCheck","Hospital","OccupationalHealthcare","PatientForm","patient","setPatient","id","description","setDescription","date","setDate","specialist","setSpecialist","diagnosisCodes","setDiagnosisCodes","type","setType","healthCheckRating","setHealthCheckRating","CriticalRisk","employerName","setEmployerName","sickLeave","setSickLeave","startDate","endDate","discharge","setDischarge","criteria","setDischargeDate","setCriteria","handleChange","event","target","value","submitEntry","preventDefault","result","console","log","JSON","stringify","entry","createPatientEntry","entries","concat","err","errMsg","Error","message","error","border","marginTop","marginBottom","padding","Object","values","map"],"sources":["/Users/chiranjeevthomas/Documents/GitHub/fullstackopen2020/part9/patientor/src/components/PatientForm/index.tsx"],"sourcesContent":["import { Button } from '@mui/material';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\n\nimport { Dispatch, SetStateAction, SyntheticEvent, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport patients from '../../services/patients';\nimport { Diagnosis, FormTypes, HealthCheckRating, NonSensitiveEntries, Patient } from '../../types';\nimport Common from './Common';\nimport HealthCheck from './HealthCheck';\nimport Hospital from './Hospital';\nimport OccupationalHealthcare from './OccupationalHealthcare';\ntype entryTypes='HealthCheck' | 'OccupationalHealthcare' | 'Hospital'\n\ninterface propTypes{\n  date:string,\n  criteria:string\n}\n\nconst PatientForm =({patient,setPatient}:{patient:Patient,setPatient:Dispatch<SetStateAction<Patient | undefined>>})=>{\n    const {id} = useParams()  \n\n      //common\n     const [description,setDescription]=useState('')\n     const [date,setDate]=useState('')\n     const [specialist,setSpecialist]=useState('')\n     const [diagnosisCodes,setDiagnosisCodes]= useState<Array<Diagnosis['code']>>([])\n\n      //healthcheckEntry\n      const [type,setType]=useState<entryTypes>('HealthCheck')\n      \n      const [healthCheckRating,setHealthCheckRating]= useState<HealthCheckRating>(HealthCheckRating.CriticalRisk)\n\n      const [employerName,setEmployerName]=useState('')\n      const [sickLeave,setSickLeave]=useState({startDate:'', endDate:'' })\n\n       const [discharge,setDischarge] =useState<propTypes>({\n          date:'',\n          criteria:''\n        })\n      const setDischargeDate = (date:string) =>{\n          setDischarge({...discharge,date})\n        }\n      \n      const setCriteria = (criteria:string) =>{\n          setDischarge({...discharge,criteria})\n        }\n      \n      \n  const handleChange = (event: SelectChangeEvent) => {\n    setType(event.target.value as entryTypes);\n  };\n\n  const submitEntry=async(event:SyntheticEvent)=>{\n    event.preventDefault();\n\n     const result:NonSensitiveEntries={\n      date,\n      description,\n      discharge,\n      employerName,\n      healthCheckRating,\n      specialist,\n      type,\n      diagnosisCodes,\n      sickLeave,\n     }\n\n     console.log(\"result\",JSON.stringify(result,null,2));\n    try{\n\n      const entry=await patients.createPatientEntry(id as string,result)\n      \n      console.log(\"Data received is\",JSON.stringify(entry,null,2))\n       \n       setPatient( patient => {\n        \n       return  {...patient,entries:patient?.entries.concat(entry)}\n      \n      })\n\n    }catch(err){\n      \n      let errMsg=\"Error : \"\n       if(err instanceof Error)\n           errMsg+=err.message\n          \n         console.error(errMsg)\n  \n    }  \n \n  }\n   \n  console.log(\"The type is \",type)\n  \n  return(\n    <div style={{border:\"2px dashed black\",marginTop:\"1rem\",marginBottom:\"1rem\",padding:\"2rem\"}}>\n      \n      <form onSubmit={submitEntry}>\n       \n       <label>Type : </label>\n         <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={type}\n          label=\"Age\"\n          onChange={handleChange}\n        >\n          {\n          Object.values(FormTypes)\n          .map( type =>  <MenuItem key={type}  value={type}>{type}</MenuItem>)\n          }\n         \n        </Select>\n        <br/>\n        <Common\n         description={description}\n         setDescription={setDescription}\n         date={date}\n         setDate={setDate}\n         specialist={specialist}\n         setSpecialist={setSpecialist}\n         selectedCodes={diagnosisCodes}\n         setSelectedCodes={setDiagnosisCodes}\n        />\n        {type===\"HealthCheck\"?<HealthCheck \n        health={healthCheckRating} \n        setHealth={setHealthCheckRating}/>:\"\"}\n        {type===\"OccupationalHealthcare\"?\n          <OccupationalHealthcare \n          employerName={employerName}\n          setEmployerName={setEmployerName}\n          sickLeave={sickLeave}\n          setSickLeave={setSickLeave}\n          \n          />:\"\"\n          }\n        {type===\"Hospital\"?<Hospital discharge={discharge} setDate={setDischargeDate} setCriteria={setCriteria}/>:\"\"}\n       <br/>\n        <Button variant=\"contained\" color=\"secondary\" type=\"submit\">Submit</Button>\n      </form>\n    </div>\n  )\n\n}\n\nexport default PatientForm"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,MAAM,MAA6B,sBAAsB;AAEhE,SAAmDC,QAAQ,QAAQ,OAAO;AAC1E,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SAAoBC,SAAS,EAAEC,iBAAiB,QAAsC,aAAa;AACnG,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,sBAAsB,MAAM,0BAA0B;AAAC;AAQ9D,MAAMC,WAAW,GAAE,QAAmG;EAAA;EAAA,IAAlG;IAACC,OAAO;IAACC;EAAqF,CAAC;EAC/G,MAAM;IAACC;EAAE,CAAC,GAAGX,SAAS,EAAE;;EAEtB;EACD,MAAM,CAACY,WAAW,EAACC,cAAc,CAAC,GAACd,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACe,IAAI,EAACC,OAAO,CAAC,GAAChB,QAAQ,CAAC,EAAE,CAAC;EACjC,MAAM,CAACiB,UAAU,EAACC,aAAa,CAAC,GAAClB,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACmB,cAAc,EAACC,iBAAiB,CAAC,GAAEpB,QAAQ,CAA2B,EAAE,CAAC;;EAE/E;EACA,MAAM,CAACqB,IAAI,EAACC,OAAO,CAAC,GAACtB,QAAQ,CAAa,aAAa,CAAC;EAExD,MAAM,CAACuB,iBAAiB,EAACC,oBAAoB,CAAC,GAAExB,QAAQ,CAAoBI,iBAAiB,CAACqB,YAAY,CAAC;EAE3G,MAAM,CAACC,YAAY,EAACC,eAAe,CAAC,GAAC3B,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAAC4B,SAAS,EAACC,YAAY,CAAC,GAAC7B,QAAQ,CAAC;IAAC8B,SAAS,EAAC,EAAE;IAAEC,OAAO,EAAC;EAAG,CAAC,CAAC;EAEnE,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAEjC,QAAQ,CAAY;IACjDe,IAAI,EAAC,EAAE;IACPmB,QAAQ,EAAC;EACX,CAAC,CAAC;EACJ,MAAMC,gBAAgB,GAAIpB,IAAW,IAAI;IACrCkB,YAAY,CAAC;MAAC,GAAGD,SAAS;MAACjB;IAAI,CAAC,CAAC;EACnC,CAAC;EAEH,MAAMqB,WAAW,GAAIF,QAAe,IAAI;IACpCD,YAAY,CAAC;MAAC,GAAGD,SAAS;MAACE;IAAQ,CAAC,CAAC;EACvC,CAAC;EAGP,MAAMG,YAAY,GAAIC,KAAwB,IAAK;IACjDhB,OAAO,CAACgB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAe;EAC3C,CAAC;EAED,MAAMC,WAAW,GAAC,MAAMH,KAAoB,IAAG;IAC7CA,KAAK,CAACI,cAAc,EAAE;IAErB,MAAMC,MAA0B,GAAC;MAChC5B,IAAI;MACJF,WAAW;MACXmB,SAAS;MACTN,YAAY;MACZH,iBAAiB;MACjBN,UAAU;MACVI,IAAI;MACJF,cAAc;MACdS;IACD,CAAC;IAEDgB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACC,IAAI,CAACC,SAAS,CAACJ,MAAM,EAAC,IAAI,EAAC,CAAC,CAAC,CAAC;IACpD,IAAG;MAED,MAAMK,KAAK,GAAC,MAAM9C,QAAQ,CAAC+C,kBAAkB,CAACrC,EAAE,EAAW+B,MAAM,CAAC;MAElEC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAACC,IAAI,CAACC,SAAS,CAACC,KAAK,EAAC,IAAI,EAAC,CAAC,CAAC,CAAC;MAE3DrC,UAAU,CAAED,OAAO,IAAI;QAEvB,OAAQ;UAAC,GAAGA,OAAO;UAACwC,OAAO,EAACxC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEwC,OAAO,CAACC,MAAM,CAACH,KAAK;QAAC,CAAC;MAE5D,CAAC,CAAC;IAEJ,CAAC,QAAMI,GAAG,EAAC;MAET,IAAIC,MAAM,GAAC,UAAU;MACpB,IAAGD,GAAG,YAAYE,KAAK,EACnBD,MAAM,IAAED,GAAG,CAACG,OAAO;MAErBX,OAAO,CAACY,KAAK,CAACH,MAAM,CAAC;IAE1B;EAEF,CAAC;EAEDT,OAAO,CAACC,GAAG,CAAC,cAAc,EAACxB,IAAI,CAAC;EAEhC,oBACE;IAAK,KAAK,EAAE;MAACoC,MAAM,EAAC,kBAAkB;MAACC,SAAS,EAAC,MAAM;MAACC,YAAY,EAAC,MAAM;MAACC,OAAO,EAAC;IAAM,CAAE;IAAA,uBAE1F;MAAM,QAAQ,EAAEnB,WAAY;MAAA,wBAE3B;QAAA,UAAO;MAAO;QAAA;QAAA;QAAA;MAAA,QAAQ,eACpB,QAAC,MAAM;QACN,OAAO,EAAC,0BAA0B;QAClC,EAAE,EAAC,oBAAoB;QACvB,KAAK,EAAEpB,IAAK;QACZ,KAAK,EAAC,KAAK;QACX,QAAQ,EAAEgB,YAAa;QAAA,UAGvBwB,MAAM,CAACC,MAAM,CAAC3D,SAAS,CAAC,CACvB4D,GAAG,CAAE1C,IAAI,iBAAK,QAAC,QAAQ;UAAa,KAAK,EAAEA,IAAK;UAAA,UAAEA;QAAI,GAAzBA,IAAI;UAAA;UAAA;UAAA;QAAA,QAAiC;MAAC;QAAA;QAAA;QAAA;MAAA,QAG7D,eACT;QAAA;QAAA;QAAA;MAAA,QAAK,eACL,QAAC,MAAM;QACN,WAAW,EAAER,WAAY;QACzB,cAAc,EAAEC,cAAe;QAC/B,IAAI,EAAEC,IAAK;QACX,OAAO,EAAEC,OAAQ;QACjB,UAAU,EAAEC,UAAW;QACvB,aAAa,EAAEC,aAAc;QAC7B,aAAa,EAAEC,cAAe;QAC9B,gBAAgB,EAAEC;MAAkB;QAAA;QAAA;QAAA;MAAA,QACnC,EACDC,IAAI,KAAG,aAAa,gBAAC,QAAC,WAAW;QAClC,MAAM,EAAEE,iBAAkB;QAC1B,SAAS,EAAEC;MAAqB;QAAA;QAAA;QAAA;MAAA,QAAE,GAAC,EAAE,EACpCH,IAAI,KAAG,wBAAwB,gBAC9B,QAAC,sBAAsB;QACvB,YAAY,EAAEK,YAAa;QAC3B,eAAe,EAAEC,eAAgB;QACjC,SAAS,EAAEC,SAAU;QACrB,YAAY,EAAEC;MAAa;QAAA;QAAA;QAAA;MAAA,QAEzB,GAAC,EAAE,EAENR,IAAI,KAAG,UAAU,gBAAC,QAAC,QAAQ;QAAC,SAAS,EAAEW,SAAU;QAAC,OAAO,EAAEG,gBAAiB;QAAC,WAAW,EAAEC;MAAY;QAAA;QAAA;QAAA;MAAA,QAAE,GAAC,EAAE,eAC7G;QAAA;QAAA;QAAA;MAAA,QAAK,eACJ,QAAC,MAAM;QAAC,OAAO,EAAC,WAAW;QAAC,KAAK,EAAC,WAAW;QAAC,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACtE;IAAA;IAAA;IAAA;EAAA,QACH;AAGV,CAAC;AAAA,GA7HK3B,WAAW;EAAA,QACAR,SAAS;AAAA;AAAA,KADpBQ,WAAW;AA+HjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}