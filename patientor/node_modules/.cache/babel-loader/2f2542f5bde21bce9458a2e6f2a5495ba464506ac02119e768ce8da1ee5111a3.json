{"ast":null,"code":"var _jsxFileName = \"/Users/chiranjeevthomas/Documents/GitHub/fullstackopen2020/part9/patientor/src/components/PatientForm/Common.tsx\",\n  _s = $RefreshSig$();\nimport { Checkbox, InputLabel, ListItemText, MenuItem, OutlinedInput, Select } from '@mui/material';\nimport React, { useState } from 'react';\nimport diagnoses from '../../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Common() {\n  _s();\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState('');\n  const [specialist, setSpecialist] = useState('');\n  const [selectedCodes, setSelectedCodes] = useState([]);\n  const codes = diagnoses.map(disease => disease.code);\n  console.log(\"selectedCodes: \", selectedCodes);\n  const element = document.getElementsByClassName('css-6hp17o-MuiList-root-MuiMenu-list')[0];\n  element.style.height = \"40vh\";\n  const setProperty = () => {};\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setSelectedCodes(\n    // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"description\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"date\",\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Specialist:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"specialist\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-multiple-name-label\",\n        children: \"Diagnostic Codes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-multiple-name-label\",\n        id: \"demo-multiple-name\",\n        multiple: true,\n        value: selectedCodes,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: \"Tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => selected.join(', '),\n        children: codes.map(code => /*#__PURE__*/_jsxDEV(MenuItem, {\n          sx: {\n            height: \"auto\",\n            overflow: 'scroll'\n          },\n          value: code,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: selectedCodes.indexOf(code) > -1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Common, \"ymHZPmiHYX9SVhRvTLbvy0ZFLrI=\");\n_c = Common;\nexport default Common;\nvar _c;\n$RefreshReg$(_c, \"Common\");","map":{"version":3,"names":["Checkbox","InputLabel","ListItemText","MenuItem","OutlinedInput","Select","React","useState","diagnoses","Common","description","setDescription","date","setDate","specialist","setSpecialist","selectedCodes","setSelectedCodes","codes","map","disease","code","console","log","element","document","getElementsByClassName","style","height","setProperty","handleChange","event","target","value","split","selected","join","overflow","indexOf"],"sources":["/Users/chiranjeevthomas/Documents/GitHub/fullstackopen2020/part9/patientor/src/components/PatientForm/Common.tsx"],"sourcesContent":["import { Checkbox, InputLabel, ListItemText, Menu, MenuItem, OutlinedInput, Select, SelectChangeEvent } from '@mui/material';\nimport React, { useState } from 'react';\nimport diagnoses from '../../data';\nimport { Diagnosis } from '../../types';\n\nfunction Common() {\n  \n     const [description,setDescription]=useState('')\n     const [date,setDate]=useState('')\n     const [specialist,setSpecialist]=useState('')\n     const [selectedCodes,setSelectedCodes]= useState<Array<Diagnosis['code']>>([])\n    \n     const codes = diagnoses.map(disease => disease.code)\n     console.log(\"selectedCodes: \", selectedCodes)\n     const element= document.getElementsByClassName('css-6hp17o-MuiList-root-MuiMenu-list')[0]\n     \n     element.style.height=\"40vh\"\n     \n     const setProperty=()=>{\n\n     }\n\n       const handleChange = (event: SelectChangeEvent<typeof selectedCodes>) => {\n    const {\n      target: { value },\n    } = event;\n    setSelectedCodes(\n      // On autofill we get a stringified value.\n      typeof value === 'string' ? value.split(',') : value,\n    );\n  };\n     \n  return (\n    <div>\n      <br/>\n      <div>Description:<input name=\"description\" type=\"text\"/></div>\n      <br/>\n      <div>Date:<input name=\"date\" type=\"date\"/></div>\n      <br/>\n      <div>Specialist:<input name=\"specialist\" type=\"text\"/></div>\n      <br/>\n      <div >\n         <InputLabel id=\"demo-multiple-name-label\">Diagnostic Codes</InputLabel>\n        {<Select\n      \n          labelId=\"demo-multiple-name-label\"\n          id=\"demo-multiple-name\"\n          multiple\n          value={selectedCodes}\n          onChange={handleChange}\n          input={<OutlinedInput  label=\"Tag\"/>}\n          renderValue={(selected) => selected.join(', ')}\n\n          >\n        {codes.map((code) => (\n                  <MenuItem  sx={{height:\"auto\",overflow:'scroll'}}  key={code} value={code}>\n                    <Checkbox checked={selectedCodes.indexOf(code) > -1} />\n                    <ListItemText primary={code} />\n                  </MenuItem>\n                ))\n          }\n        </Select>\n        \n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Common"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}