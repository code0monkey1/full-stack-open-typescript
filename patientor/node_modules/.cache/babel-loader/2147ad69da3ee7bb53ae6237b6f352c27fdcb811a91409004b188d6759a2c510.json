{"ast":null,"code":"var _jsxFileName = \"/Users/chiranjeevthomas/Documents/GitHub/fullstackopen2020/part9/patientor/src/components/PatientDetails/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport AltRouteIcon from '@mui/icons-material/AltRoute';\nimport FemaleIcon from '@mui/icons-material/Female';\nimport MaleIcon from '@mui/icons-material/Male';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport diagnostics from '../../services/diagnosis';\nimport patients from '../../services/patients';\nimport { Gender } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PatientDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [patient, setPatient] = useState();\n  useEffect(() => {\n    patients.get(id).then(patient => setPatient(patient)).catch(err => {\n      console.error(err.message);\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: patient ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [patient.name, '         ', patient.gender === Gender.Male ? /*#__PURE__*/_jsxDEV(MaleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 10\n        }, this) : patient.gender === Gender.Female ? /*#__PURE__*/_jsxDEV(FemaleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 53\n        }, this) : /*#__PURE__*/_jsxDEV(AltRouteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"ssh: \", patient.ssn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"occupation: \", patient.occupation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Entries :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: patient.entries.map(entry => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: GetCommonEntry(entry)\n        }, entry.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this) : \"\"\n  }, void 0, false);\n};\n_s(PatientDetails, \"0Bv2Z5Es4VVDQmtDW9LOWRHKUTw=\", false, function () {\n  return [useParams];\n});\n_c = PatientDetails;\nconst GetCommonEntry = entry => {\n  _s2();\n  var _entry$diagnosisCodes;\n  const [diagnosis, setDiagnosis] = useState();\n  useEffect(() => {\n    diagnostics.getDiagnosis().then(d => {\n      console.log(d);\n      return setDiagnosis(d);\n    }).catch(err => {\n      console.error(err.message);\n    });\n  }, [entry]);\n  const getExplanation = code => {\n    const disease = diagnosis === null || diagnosis === void 0 ? void 0 : diagnosis.find(d => d.code === code);\n    return disease === null || disease === void 0 ? void 0 : disease.name;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Date:\", entry.date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Description:\", entry.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }, this), entry.diagnosisCodes ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Codes:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: entry === null || entry === void 0 ? void 0 : (_entry$diagnosisCodes = entry.diagnosisCodes) === null || _entry$diagnosisCodes === void 0 ? void 0 : _entry$diagnosisCodes.map(code => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: code\n        }, code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 52\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Specialist:\", entry.specialist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Type:\", entry.type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n_s2(GetCommonEntry, \"fFUK768+6U2rvJLHncYzYa4Wu5Y=\");\n_c2 = GetCommonEntry;\nconst GetEntry = entry => {\n  var _entry$sickLeave, _entry$sickLeave2;\n  const assertNever = data => {\n    throw Error(\"This should never be called\" + data);\n  };\n  switch (entry.type) {\n    case 'HealthCheck':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: entry.healthCheckRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 14\n      }, this);\n    case 'Hospital':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Date:\", entry.discharge.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Criteria:\", entry.discharge.criteria]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 14\n      }, this);\n    case 'OccupationalHealthcare':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Start Date:\", (_entry$sickLeave = entry.sickLeave) === null || _entry$sickLeave === void 0 ? void 0 : _entry$sickLeave.startDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"End Date:\", (_entry$sickLeave2 = entry.sickLeave) === null || _entry$sickLeave2 === void 0 ? void 0 : _entry$sickLeave2.endDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 14\n      }, this);\n    default:\n      return assertNever(entry);\n  }\n};\n_c3 = GetEntry;\nexport default PatientDetails;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"PatientDetails\");\n$RefreshReg$(_c2, \"GetCommonEntry\");\n$RefreshReg$(_c3, \"GetEntry\");","map":{"version":3,"names":["AltRouteIcon","FemaleIcon","MaleIcon","React","useEffect","useState","useParams","diagnostics","patients","Gender","PatientDetails","id","patient","setPatient","get","then","catch","err","console","error","message","name","gender","Male","Female","ssn","occupation","entries","map","entry","GetCommonEntry","diagnosis","setDiagnosis","getDiagnosis","d","log","getExplanation","code","disease","find","date","description","diagnosisCodes","specialist","type","GetEntry","assertNever","data","Error","healthCheckRating","discharge","criteria","sickLeave","startDate","endDate"],"sources":["/Users/chiranjeevthomas/Documents/GitHub/fullstackopen2020/part9/patientor/src/components/PatientDetails/index.tsx"],"sourcesContent":["import AltRouteIcon from '@mui/icons-material/AltRoute';\nimport FemaleIcon from '@mui/icons-material/Female';\nimport MaleIcon from '@mui/icons-material/Male';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport diagnostics from '../../services/diagnosis';\nimport patients from '../../services/patients';\n\nimport { Diagnosis, Entry, Gender, Patient } from '../../types';\n\nconst PatientDetails = () => {\n   \n  const {id} = useParams() \n\n  const [patient,setPatient]=useState<Patient>()\n  \n  \n useEffect(()=>{\n     \n    patients.get(id)\n    .then(patient => setPatient(patient))\n    .catch(err =>{\n         \n      console.error(err.message);\n    })\n\n },[id])\n\n\n  return (\n    <>\n    {patient?\n    <div>\n        <h2>{patient.name}{'         '}{patient.gender===Gender.Male\n        ?<MaleIcon/>:patient.gender===Gender.Female?<FemaleIcon/>:<AltRouteIcon/>}</h2>\n        <h3>ssh: {patient.ssn}</h3>\n        <h3>occupation: {patient.occupation}</h3>\n        \n        <h2>Entries :</h2>\n        <ul>\n        {\n          patient.entries.map(entry =>\n                  <li key={entry.id}>\n                    {GetCommonEntry(entry)}\n                    {/* {GetEntry(entry)} */}\n                    </li>)\n        }\n        </ul>\n     \n     </div>:\"\"\n    }\n    </>\n  )\n}\n\nconst GetCommonEntry=(entry:Entry) :JSX.Element=> {\n \n  const [diagnosis,setDiagnosis] = useState<Diagnosis[]>()\n\n  useEffect(()=>{\n        diagnostics\n        .getDiagnosis()\n        .then(d => {       \n              console.log(d)\n            return setDiagnosis(d)\n          }\n            \n            )\n        .catch(err =>{\n          console.error(err.message)\n        })\n  \n  },[entry])\n  \n  const getExplanation=(code:string)=>{\n\n     const disease = diagnosis?.find( d => d.code===code)\n\n     return disease?.name\n  }\n\n  return(<>\n  <h4>Date:{entry.date}</h4> \n  <h4>Description:{entry.description}</h4>\n  {entry.diagnosisCodes?\n  <h4>Codes:<ul>{entry?.diagnosisCodes?.map(code =><li key={code}>{code}</li>)}</ul></h4>:\"\"\n  }\n  <h4>Specialist:{entry.specialist}</h4>\n  <h4>Type:{entry.type}</h4>\n  </>)\n  \n}\n\nconst GetEntry=(entry:Entry):JSX.Element=>{\n    \n  const assertNever = (data:unknown):never =>{\n     \n     throw Error(\"This should never be called\"+data)\n  }\n  \n  switch(entry.type){\n     \n    case 'HealthCheck':\n      return <div>\n        {<h4>{entry.healthCheckRating}</h4>}\n      </div>\n    case 'Hospital':\n      return <div>\n        {<h4>Date:{entry.discharge.date}</h4>}\n        {<h4>Criteria:{entry.discharge.criteria}</h4>}\n        </div>\n    case 'OccupationalHealthcare':\n      return <div>\n         {<h4>Start Date:{entry.sickLeave?.startDate}</h4>}\n        {<h4>End Date:{entry.sickLeave?.endDate}</h4>}\n      </div>\n    default:\n      return assertNever(entry)\n\n  }\n  \n}\n\nexport default PatientDetails"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}