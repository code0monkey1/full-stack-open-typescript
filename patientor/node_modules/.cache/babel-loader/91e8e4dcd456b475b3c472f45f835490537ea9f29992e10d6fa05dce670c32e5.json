{"ast":null,"code":"var _jsxFileName = \"/Users/chiranjeevthomas/Documents/GitHub/fullstackopen2020/part9/patientor/src/components/PatientDetails/index.tsx\",\n  _s = $RefreshSig$();\nimport AltRouteIcon from '@mui/icons-material/AltRoute';\nimport FemaleIcon from '@mui/icons-material/Female';\nimport MaleIcon from '@mui/icons-material/Male';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport patients from '../../services/patients';\nimport { Gender } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PatientDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [patient, setPatient] = useState();\n  useEffect(() => {\n    patients.get(id).then(patient => setPatient(patient)).catch(err => {\n      console.error(err.message);\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: patient && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [patient.name, '         ', patient.gender === Gender.Male ? /*#__PURE__*/_jsxDEV(MaleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 8\n        }, this) : patient.gender === Gender.Female ? /*#__PURE__*/_jsxDEV(FemaleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 51\n        }, this) : /*#__PURE__*/_jsxDEV(AltRouteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 65\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"ssh: \", patient.ssn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"occupation: \", patient.occupation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(PatientDetails, \"0Bv2Z5Es4VVDQmtDW9LOWRHKUTw=\", false, function () {\n  return [useParams];\n});\n_c = PatientDetails;\nexport default PatientDetails;\nvar _c;\n$RefreshReg$(_c, \"PatientDetails\");","map":{"version":3,"names":["AltRouteIcon","FemaleIcon","MaleIcon","React","useEffect","useState","useParams","patients","Gender","PatientDetails","id","patient","setPatient","get","then","catch","err","console","error","message","name","gender","Male","Female","ssn","occupation"],"sources":["/Users/chiranjeevthomas/Documents/GitHub/fullstackopen2020/part9/patientor/src/components/PatientDetails/index.tsx"],"sourcesContent":["import AltRouteIcon from '@mui/icons-material/AltRoute';\nimport FemaleIcon from '@mui/icons-material/Female';\nimport MaleIcon from '@mui/icons-material/Male';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport patients from '../../services/patients';\nimport { Gender, Patient } from '../../types';\n\nconst PatientDetails = () => {\n   \n  const {id} = useParams() \n\n  const [patient,setPatient]=useState<Patient>()\n\n  \n useEffect(()=>{\n     \n    patients.get(id)\n    .then(patient => setPatient(patient))\n    .catch(err =>{\n         \n      console.error(err.message);\n    })\n\n },[id])\n\n\n  return (\n    <>\n    {patient && <div>\n      <h2>{patient.name}{'         '}{patient.gender===Gender.Male\n      ?<MaleIcon/>:patient.gender===Gender.Female?<FemaleIcon/>:<AltRouteIcon/>}</h2>\n      <h3>ssh: {patient.ssn}</h3>\n      <h3>occupation: {patient.occupation}</h3>\n     \n     </div>\n    }\n    </>\n  )\n}\n\nexport default PatientDetails"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,8BAA8B;AACvD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SAASC,MAAM,QAAiB,aAAa;AAAC;AAAA;AAE9C,MAAMC,cAAc,GAAG,MAAM;EAAA;EAE3B,MAAM;IAACC;EAAE,CAAC,GAAGJ,SAAS,EAAE;EAExB,MAAM,CAACK,OAAO,EAACC,UAAU,CAAC,GAACP,QAAQ,EAAW;EAG/CD,SAAS,CAAC,MAAI;IAEXG,QAAQ,CAACM,GAAG,CAACH,EAAE,CAAC,CACfI,IAAI,CAACH,OAAO,IAAIC,UAAU,CAACD,OAAO,CAAC,CAAC,CACpCI,KAAK,CAACC,GAAG,IAAG;MAEXC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;IAC5B,CAAC,CAAC;EAEL,CAAC,EAAC,CAACT,EAAE,CAAC,CAAC;EAGN,oBACE;IAAA,UACCC,OAAO,iBAAI;MAAA,wBACV;QAAA,WAAKA,OAAO,CAACS,IAAI,EAAE,WAAW,EAAET,OAAO,CAACU,MAAM,KAAGb,MAAM,CAACc,IAAI,gBAC3D,QAAC,QAAQ;UAAA;UAAA;UAAA;QAAA,QAAE,GAACX,OAAO,CAACU,MAAM,KAAGb,MAAM,CAACe,MAAM,gBAAC,QAAC,UAAU;UAAA;UAAA;UAAA;QAAA,QAAE,gBAAC,QAAC,YAAY;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAC/E;QAAA,WAAI,OAAK,EAACZ,OAAO,CAACa,GAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAC3B;QAAA,WAAI,cAAY,EAACb,OAAO,CAACc,UAAU;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA;EAEpC,iBAEJ;AAEP,CAAC;AAAA,GA/BKhB,cAAc;EAAA,QAELH,SAAS;AAAA;AAAA,KAFlBG,cAAc;AAiCpB,eAAeA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}