{"ast":null,"code":"var _jsxFileName = \"/Users/chiranjeevthomas/Documents/GitHub/fullstackopen2020/part9/patientor/src/components/PatientForm/Common.tsx\";\nimport { Checkbox, InputLabel, ListItemText, MenuItem, OutlinedInput, Select } from '@mui/material';\nimport diagnoses from '../../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Common(_ref) {\n  let {\n    description,\n    setDescription,\n    date,\n    setDate,\n    specialist,\n    setSpecialist,\n    selectedCodes,\n    setSelectedCodes\n  } = _ref;\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setSelectedCodes(\n    // On autofill we get a stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: description,\n        required: true,\n        onChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          setDescription(target.value);\n        },\n        name: \"description\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: date,\n        required: true,\n        onChange: _ref3 => {\n          let {\n            target\n          } = _ref3;\n          setDate(target.value);\n        },\n        name: \"date\",\n        type: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Specialist:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: specialist,\n        required: true,\n        onChange: _ref4 => {\n          let {\n            target\n          } = _ref4;\n          setSpecialist(target.value);\n        },\n        name: \"specialist\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-multiple-name-label\",\n        children: \"Diagnostic Codes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-multiple-name-label\",\n        id: \"demo-multiple-name\",\n        multiple: true,\n        value: selectedCodes,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: \"Tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => selected.join(', '),\n        children: diagnoses === null || diagnoses === void 0 ? void 0 : diagnoses.map(disease => disease.code).map(code => /*#__PURE__*/_jsxDEV(MenuItem, {\n          sx: {\n            height: \"auto\",\n            overflow: 'scroll'\n          },\n          value: code,\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: selectedCodes.indexOf(code) > -1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = Common;\nexport default Common;\nvar _c;\n$RefreshReg$(_c, \"Common\");","map":{"version":3,"names":["Checkbox","InputLabel","ListItemText","MenuItem","OutlinedInput","Select","diagnoses","Common","description","setDescription","date","setDate","specialist","setSpecialist","selectedCodes","setSelectedCodes","handleChange","event","target","value","split","selected","join","map","disease","code","height","overflow","indexOf"],"sources":["/Users/chiranjeevthomas/Documents/GitHub/fullstackopen2020/part9/patientor/src/components/PatientForm/Common.tsx"],"sourcesContent":["import { Checkbox, InputLabel, ListItemText, Menu, MenuItem, OutlinedInput, Select, SelectChangeEvent } from '@mui/material';\nimport diagnoses from '../../data';\nimport { Diagnosis } from '../../types';\n\ninterface PropTypes{\n  description:string,\n  setDescription:(value:any)=>void,\n  date:string,\n  setDate:(value:any)=>void,\n  specialist:string,\n  setSpecialist:(value:any)=>void,\n  selectedCodes:Array<Diagnosis['code']>,\n  setSelectedCodes:(value:any)=>void,\n}\n\nfunction Common({description,setDescription,date,setDate,specialist,setSpecialist,selectedCodes,setSelectedCodes}:PropTypes) {\n\n\n    const handleChange = (event: SelectChangeEvent<typeof selectedCodes>) => {\n      const {\n        target: { value },\n      } = event;\n      setSelectedCodes(\n        // On autofill we get a stringified value.\n        typeof value === 'string' ? value.split(',') : value,\n      );\n  };\n     \n  return (\n    <div>\n      <br/>\n        <div>\n          Description:<input  value={description} required={true}\n           onChange={({target})=>{setDescription (target.value)}}  name=\"description\" type=\"text\"/>\n        </div>\n      <br/>\n        <div>\n          Date:<input value={date} required={true}\n          onChange={({target})=>{setDate (target.value)}} name=\"date\" type=\"date\"/>\n        </div>\n      <br/>\n        <div>\n          Specialist:\n          <input value={specialist} required={true}\n          onChange={({target})=>{setSpecialist (target.value)}} name=\"specialist\" type=\"text\"/>\n        </div>\n      <br/>\n      <div >\n         <InputLabel id=\"demo-multiple-name-label\">Diagnostic Codes</InputLabel>\n        {<Select\n          labelId=\"demo-multiple-name-label\"\n          id=\"demo-multiple-name\"\n          multiple\n          value={selectedCodes}\n          onChange={handleChange}\n          input={<OutlinedInput  label=\"Tag\"/>}\n          renderValue={(selected) => selected.join(', ')}\n          >\n            \n        { \n          diagnoses?.map(disease => disease.code).map((code) => (\n                  <MenuItem  sx={{height:\"auto\",overflow:'scroll'}}  key={code} value={code}>\n                    <Checkbox checked={selectedCodes.indexOf(code) > -1} />\n                    <ListItemText primary={code} />\n                  </MenuItem>\n                ))\n          }\n        </Select>\n        \n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Common"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}