{"ast":null,"code":"var _jsxFileName = \"/Users/chiranjeevthomas/Documents/GitHub/fullstackopen2020/part9/patientor/src/components/PatientDetails/index.tsx\",\n  _s = $RefreshSig$();\nimport AltRouteIcon from '@mui/icons-material/AltRoute';\nimport FemaleIcon from '@mui/icons-material/Female';\nimport MaleIcon from '@mui/icons-material/Male';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport patients from '../../services/patients';\nimport { Gender } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PatientDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [patient, setPatient] = useState();\n  useEffect(() => {\n    patients.get(id).then(patient => setPatient(patient)).catch(err => {\n      console.error(err.message);\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: patient && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [patient.name, '         ', patient.gender === Gender.Male ? /*#__PURE__*/_jsxDEV(MaleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 10\n        }, this) : patient.gender === Gender.Female ? /*#__PURE__*/_jsxDEV(FemaleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 53\n        }, this) : /*#__PURE__*/_jsxDEV(AltRouteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"ssh: \", patient.ssn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"occupation: \", patient.occupation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Entries :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: patient.entries.map(entry => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: getEntry(entry)\n        }, entry.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(PatientDetails, \"0Bv2Z5Es4VVDQmtDW9LOWRHKUTw=\", false, function () {\n  return [useParams];\n});\n_c = PatientDetails;\nconst getCommonEntry = entry => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Date: \", entry.date]\n  }, void 0, true);\n};\nconst getEntry = entry => {\n  var _entry$sickLeave, _entry$sickLeave2;\n  const assertNever = data => {\n    throw Error(\"This should never be called\" + data);\n  };\n  switch (entry.type) {\n    case 'HealthCheck':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: entry.healthCheckRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }, this);\n    case 'Hospital':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Date:\", entry.discharge.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Criteria:\", entry.discharge.criteria]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 14\n      }, this);\n    case 'OccupationalHealthcare':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Start Date:\", (_entry$sickLeave = entry.sickLeave) === null || _entry$sickLeave === void 0 ? void 0 : _entry$sickLeave.startDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"End Date:\", (_entry$sickLeave2 = entry.sickLeave) === null || _entry$sickLeave2 === void 0 ? void 0 : _entry$sickLeave2.endDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this);\n    default:\n      return assertNever(entry);\n  }\n};\nexport default PatientDetails;\nvar _c;\n$RefreshReg$(_c, \"PatientDetails\");","map":{"version":3,"names":["AltRouteIcon","FemaleIcon","MaleIcon","React","useEffect","useState","useParams","patients","Gender","PatientDetails","id","patient","setPatient","get","then","catch","err","console","error","message","name","gender","Male","Female","ssn","occupation","entries","map","entry","getEntry","getCommonEntry","date","assertNever","data","Error","type","healthCheckRating","discharge","criteria","sickLeave","startDate","endDate"],"sources":["/Users/chiranjeevthomas/Documents/GitHub/fullstackopen2020/part9/patientor/src/components/PatientDetails/index.tsx"],"sourcesContent":["import AltRouteIcon from '@mui/icons-material/AltRoute';\nimport FemaleIcon from '@mui/icons-material/Female';\nimport MaleIcon from '@mui/icons-material/Male';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport patients from '../../services/patients';\nimport { Entry, Gender, Patient } from '../../types';\n\nconst PatientDetails = () => {\n   \n  const {id} = useParams() \n\n  const [patient,setPatient]=useState<Patient>()\n\n  \n useEffect(()=>{\n     \n    patients.get(id)\n    .then(patient => setPatient(patient))\n    .catch(err =>{\n         \n      console.error(err.message);\n    })\n\n },[id])\n\n\n  return (\n    <>\n    {patient && \n    <div>\n        <h2>{patient.name}{'         '}{patient.gender===Gender.Male\n        ?<MaleIcon/>:patient.gender===Gender.Female?<FemaleIcon/>:<AltRouteIcon/>}</h2>\n        <h3>ssh: {patient.ssn}</h3>\n        <h3>occupation: {patient.occupation}</h3>\n        \n        <h2>Entries :</h2>\n        <ul>\n        {\n          patient.entries.map(entry =>\n                  <li key={entry.id}>\n                    {\n                  \n                    getEntry(entry)\n                    \n                    }\n                    </li>)\n        }\n        </ul>\n     \n     </div>\n    }\n    </>\n  )\n}\n\nconst getCommonEntry=(entry:Entry) :JSX.Element=> {\n         \n\n  return(<>\n   Date: {\n     entry.date\n    }\n  </>)\n  \n}\n\nconst getEntry=(entry:Entry):JSX.Element=>{\n    \n  const assertNever = (data:unknown):never =>{\n     \n     throw Error(\"This should never be called\"+data)\n  }\n  \n  switch(entry.type){\n     \n    case 'HealthCheck':\n      return <div>\n        {<h4>{entry.healthCheckRating}</h4>}\n      </div>\n    case 'Hospital':\n      return <div>\n        {<h4>Date:{entry.discharge.date}</h4>}\n        {<h4>Criteria:{entry.discharge.criteria}</h4>}\n        </div>\n    case 'OccupationalHealthcare':\n      return <div>\n         {<h4>Start Date:{entry.sickLeave?.startDate}</h4>}\n        {<h4>End Date:{entry.sickLeave?.endDate}</h4>}\n      </div>\n    default:\n      return assertNever(entry)\n\n  }\n  \n}\n\nexport default PatientDetails"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}